#Inference of the Posterior Distributions of the Branch Lengths

# Please execute the following command to perform Bayesian inference of the posterior distributions of branch-length trees using a GL substitution model on a single alignment with a fixed tree topology.
# The Markov chain Monte Carlo (MCMC) algorithm runs for 30000 iterations. 
# It uses the alignment data/alignment.fasta, and the branch-length tree data/substitution.tree.
# The output is a file output/alignment.fasta.trees containing the 30000 branch-length trees from the MCMC chain.
# It will be used to calculate the posterior means and variances of the branch lengths

################################################################################
# Bayesian inference of branch lengths using a GL substitution model
# on a single alignment, with a fixed tree topology.
mcmc_burnin = 5000
num_generations = 100000
data_dir = "/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/data/"
aln_file = "Virus_concatenated_alignment.nxs"
tree_file = "Phylogenybusco_constrain_complet_name.nwk"

################################################################################
# Sequence data.

data = readDiscreteCharacterData(data_dir+aln_file)
print ("\n\tRead alignment")

# Get some useful variables from the data. We need Cynipoidea_project later on.
taxa <- data.taxa()

moves    = VectorMoves()
monitors = VectorMonitors()

################################################################################
# Substitution Model.

#Q <- fnJC(4)
Q := fnLG()

################################################################################
# Tree model.

tree <- readBranchLengthTrees(data_dir + tree_file)[1]
num_branches <- tree.nnodes() - 1

# Branch length prior.
for (i in 1:num_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i], lambda=0.1, tune=FALSE) )
    moves.append( mvScale(bl[i], lambda=1.0, tune=FALSE) )
    moves.append( mvScale(bl[i], lambda=10, tune=FALSE) )
}
TL := sum(bl)

psi := treeAssembly(tree, bl)

################################################################################
# PhyloCTMC Model.

seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="AA")
seq.clamp(data)


################################################################################
# Analysis.

# Monitors.
monitors.append( mnScreen(TL, printgen=100) )
monitors.append( mnFile(psi, filename="/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/output/" + aln_file+".trees", printgen=10) )
monitors.append( mnModel(filename="/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/output/" + aln_file+".log", printgen=10) )

print(data.names())
print(psi.names())

mymodel = model(psi)
mymcmc = mcmc(mymodel, moves, monitors,nruns=3)
mymcmc.burnin(generations=mcmc_burnin,tuningInterval=200)
mymcmc.run(generations = num_generations,checkpointFile="/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/scripts/checkpoint_1A_20000.state", checkpointInterval=10)

################################################################################
# Post processing.

treetrace = readTreeTrace("/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/output/"+ aln_file+".trees", treetype="non-clock",nruns=3,burnin=0.25)
map_tree = mapTree(treetrace, "/beegfs/data/bguinet/Cynipoidea_project/Rev_datation_analysis/output/" + aln_file + ".tree")

q()
